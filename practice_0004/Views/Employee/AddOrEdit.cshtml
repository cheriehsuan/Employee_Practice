@model practice_0004.ModelView.EmployeeModelView

@{
    ViewBag.Title = "AddOrEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@section JavaScript
{
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
}

<script type="text/javascript">
    $(function () {

        //$('#age').css('color', 'red');
        if (!$("#hiddenEmpID").val())
            $("#button").val('Create');
        else
            $("#button").val('Save');

        $("#age, #salary").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });
        $('.datepicker').datepicker({
            format: 'yyyy/mm/dd',
            autoclose: true
        });
    });

</script>

<style type="text/css">
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>基本資料</h4>
        <hr />
        @Html.HiddenFor(model => model.EmployeeList.Emp_ID, new { @id = "hiddenEmpID", @class = "form-control", @Value = string.IsNullOrEmpty(@Model.EmployeeList.Emp_ID) ? string.Empty : @Model.EmployeeList.Emp_ID })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.Emp_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp_ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp_ID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.FName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.FName, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.FName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.LName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.LName, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.LName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.Age, new { htmlAttributes = new { @id = "age", @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.BirthDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.BirthDay, new { htmlAttributes = new { @id = "dateTimePicker1", @class = "form-control datepicker", @Value = @Model.EmployeeList.BirthDay.ToString("yyyy/MM/dd"), @maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.BirthDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.Address, new { htmlAttributes = new { @class = "form-control", @maxlength = "100" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.Hire_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.Hire_date, new { htmlAttributes = new { @class = "form-control datepicker", @maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.Hire_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.salary, new { htmlAttributes = new { @id = "salary", @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>駐點資料</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.Pub_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.Pub_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.Pub_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.City, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeList.Country, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EmployeeList.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="button" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
